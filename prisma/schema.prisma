generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// =========================
// Modelos de Negócio
// =========================

model Pousada {
     id                   String     @id @default(uuid())
     legalName            String
     tradeName            String
     phone                String?
     notes                String?    
     monthlyProrationMode String     @default("actual_days")
     createdAt            DateTime   @default(now())
     updatedAt            DateTime   @updatedAt
   
     // Relacionamentos
     usuariosPousada      UsuarioPousada[]
     roomTypes            RoomType[]
   
     @@map("pousada")
   }

// --- ADICIONE O MODELO RoomType ABAIXO ---

model RoomType {
  id            String  @id @default(uuid())
  name          String
  description   String? // Opcional
  occupancyMode String  // "private" ou "shared"
  baseOccupancy Int
  maxOccupancy  Int

  // Relação: Um RoomType pertence a uma Pousada
  pousadaId     String
  pousada       Pousada @relation(fields: [pousadaId], references: [id], onDelete: Cascade)

  @@map("room_type")
}


model Usuario {
  id            String    @id @default(uuid())
  name          String
  username      String    @unique
  email         String    @unique
  phone         String?
  passwordHash  String    
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  pousadasUsuario UsuarioPousada[]

  @@map("usuario")
}

model UsuarioPousada {
  usuarioId String
  pousadaId String
  isDefault Boolean @default(false)

  usuario   Usuario @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  pousada   Pousada @relation(fields: [pousadaId], references: [id], onDelete: Cascade)

  @@id([usuarioId, pousadaId])
  @@map("usuario_pousada")
}
